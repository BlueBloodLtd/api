=begin
#PostgREST API

#standard public schema

OpenAPI spec version: 0.5.0.0 (d8896be)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/args'
require 'swagger_client/models/args_1'
require 'swagger_client/models/args_2'
require 'swagger_client/models/args_3'

# APIs
require 'swagger_client/api/introspection_api'
require 'swagger_client/api/rpc_armor_api'
require 'swagger_client/api/rpc_crypt_api'
require 'swagger_client/api/rpc_dearmor_api'
require 'swagger_client/api/rpc_decrypt_api'
require 'swagger_client/api/rpc_decrypt_iv_api'
require 'swagger_client/api/rpc_digest_api'
require 'swagger_client/api/rpc_encrypt_api'
require 'swagger_client/api/rpc_encrypt_iv_api'
require 'swagger_client/api/rpc_gen_random_bytes_api'
require 'swagger_client/api/rpc_gen_random_uuid_api'
require 'swagger_client/api/rpc_gen_salt_api'
require 'swagger_client/api/rpc_hmac_api'
require 'swagger_client/api/rpc_login_api'
require 'swagger_client/api/rpc_pgp_armor_headers_api'
require 'swagger_client/api/rpc_pgp_key_id_api'
require 'swagger_client/api/rpc_pgp_pub_decrypt_api'
require 'swagger_client/api/rpc_pgp_pub_decrypt_bytea_api'
require 'swagger_client/api/rpc_pgp_pub_encrypt_api'
require 'swagger_client/api/rpc_pgp_pub_encrypt_bytea_api'
require 'swagger_client/api/rpc_pgp_sym_decrypt_api'
require 'swagger_client/api/rpc_pgp_sym_decrypt_bytea_api'
require 'swagger_client/api/rpc_pgp_sym_encrypt_api'
require 'swagger_client/api/rpc_pgp_sym_encrypt_bytea_api'
require 'swagger_client/api/rpc_request_password_reset_api'
require 'swagger_client/api/rpc_reset_password_api'
require 'swagger_client/api/rpc_signup_api'
require 'swagger_client/api/rpc_update_users_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
