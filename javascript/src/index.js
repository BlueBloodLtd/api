/**
 * PostgREST API
 * standard public schema
 *
 * OpenAPI spec version: 0.5.0.0 (d8896be)
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Args', 'model/Args1', 'model/Args2', 'model/Args3', 'api/IntrospectionApi', 'api/RpcArmorApi', 'api/RpcCryptApi', 'api/RpcDearmorApi', 'api/RpcDecryptApi', 'api/RpcDecryptIvApi', 'api/RpcDigestApi', 'api/RpcEncryptApi', 'api/RpcEncryptIvApi', 'api/RpcGenRandomBytesApi', 'api/RpcGenRandomUuidApi', 'api/RpcGenSaltApi', 'api/RpcHmacApi', 'api/RpcLoginApi', 'api/RpcPgpArmorHeadersApi', 'api/RpcPgpKeyIdApi', 'api/RpcPgpPubDecryptApi', 'api/RpcPgpPubDecryptByteaApi', 'api/RpcPgpPubEncryptApi', 'api/RpcPgpPubEncryptByteaApi', 'api/RpcPgpSymDecryptApi', 'api/RpcPgpSymDecryptByteaApi', 'api/RpcPgpSymEncryptApi', 'api/RpcPgpSymEncryptByteaApi', 'api/RpcRequestPasswordResetApi', 'api/RpcResetPasswordApi', 'api/RpcSignupApi', 'api/RpcUpdateUsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Args'), require('./model/Args1'), require('./model/Args2'), require('./model/Args3'), require('./api/IntrospectionApi'), require('./api/RpcArmorApi'), require('./api/RpcCryptApi'), require('./api/RpcDearmorApi'), require('./api/RpcDecryptApi'), require('./api/RpcDecryptIvApi'), require('./api/RpcDigestApi'), require('./api/RpcEncryptApi'), require('./api/RpcEncryptIvApi'), require('./api/RpcGenRandomBytesApi'), require('./api/RpcGenRandomUuidApi'), require('./api/RpcGenSaltApi'), require('./api/RpcHmacApi'), require('./api/RpcLoginApi'), require('./api/RpcPgpArmorHeadersApi'), require('./api/RpcPgpKeyIdApi'), require('./api/RpcPgpPubDecryptApi'), require('./api/RpcPgpPubDecryptByteaApi'), require('./api/RpcPgpPubEncryptApi'), require('./api/RpcPgpPubEncryptByteaApi'), require('./api/RpcPgpSymDecryptApi'), require('./api/RpcPgpSymDecryptByteaApi'), require('./api/RpcPgpSymEncryptApi'), require('./api/RpcPgpSymEncryptByteaApi'), require('./api/RpcRequestPasswordResetApi'), require('./api/RpcResetPasswordApi'), require('./api/RpcSignupApi'), require('./api/RpcUpdateUsersApi'));
  }
}(function(ApiClient, Args, Args1, Args2, Args3, IntrospectionApi, RpcArmorApi, RpcCryptApi, RpcDearmorApi, RpcDecryptApi, RpcDecryptIvApi, RpcDigestApi, RpcEncryptApi, RpcEncryptIvApi, RpcGenRandomBytesApi, RpcGenRandomUuidApi, RpcGenSaltApi, RpcHmacApi, RpcLoginApi, RpcPgpArmorHeadersApi, RpcPgpKeyIdApi, RpcPgpPubDecryptApi, RpcPgpPubDecryptByteaApi, RpcPgpPubEncryptApi, RpcPgpPubEncryptByteaApi, RpcPgpSymDecryptApi, RpcPgpSymDecryptByteaApi, RpcPgpSymEncryptApi, RpcPgpSymEncryptByteaApi, RpcRequestPasswordResetApi, RpcResetPasswordApi, RpcSignupApi, RpcUpdateUsersApi) {
  'use strict';

  /**
   * standard_public_schema.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var PostgRestApi = require('index'); // See note below*.
   * var xxxSvc = new PostgRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new PostgRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new PostgRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new PostgRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.5.0.0 (d8896be)
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Args model constructor.
     * @property {module:model/Args}
     */
    Args: Args,
    /**
     * The Args1 model constructor.
     * @property {module:model/Args1}
     */
    Args1: Args1,
    /**
     * The Args2 model constructor.
     * @property {module:model/Args2}
     */
    Args2: Args2,
    /**
     * The Args3 model constructor.
     * @property {module:model/Args3}
     */
    Args3: Args3,
    /**
     * The IntrospectionApi service constructor.
     * @property {module:api/IntrospectionApi}
     */
    IntrospectionApi: IntrospectionApi,
    /**
     * The RpcArmorApi service constructor.
     * @property {module:api/RpcArmorApi}
     */
    RpcArmorApi: RpcArmorApi,
    /**
     * The RpcCryptApi service constructor.
     * @property {module:api/RpcCryptApi}
     */
    RpcCryptApi: RpcCryptApi,
    /**
     * The RpcDearmorApi service constructor.
     * @property {module:api/RpcDearmorApi}
     */
    RpcDearmorApi: RpcDearmorApi,
    /**
     * The RpcDecryptApi service constructor.
     * @property {module:api/RpcDecryptApi}
     */
    RpcDecryptApi: RpcDecryptApi,
    /**
     * The RpcDecryptIvApi service constructor.
     * @property {module:api/RpcDecryptIvApi}
     */
    RpcDecryptIvApi: RpcDecryptIvApi,
    /**
     * The RpcDigestApi service constructor.
     * @property {module:api/RpcDigestApi}
     */
    RpcDigestApi: RpcDigestApi,
    /**
     * The RpcEncryptApi service constructor.
     * @property {module:api/RpcEncryptApi}
     */
    RpcEncryptApi: RpcEncryptApi,
    /**
     * The RpcEncryptIvApi service constructor.
     * @property {module:api/RpcEncryptIvApi}
     */
    RpcEncryptIvApi: RpcEncryptIvApi,
    /**
     * The RpcGenRandomBytesApi service constructor.
     * @property {module:api/RpcGenRandomBytesApi}
     */
    RpcGenRandomBytesApi: RpcGenRandomBytesApi,
    /**
     * The RpcGenRandomUuidApi service constructor.
     * @property {module:api/RpcGenRandomUuidApi}
     */
    RpcGenRandomUuidApi: RpcGenRandomUuidApi,
    /**
     * The RpcGenSaltApi service constructor.
     * @property {module:api/RpcGenSaltApi}
     */
    RpcGenSaltApi: RpcGenSaltApi,
    /**
     * The RpcHmacApi service constructor.
     * @property {module:api/RpcHmacApi}
     */
    RpcHmacApi: RpcHmacApi,
    /**
     * The RpcLoginApi service constructor.
     * @property {module:api/RpcLoginApi}
     */
    RpcLoginApi: RpcLoginApi,
    /**
     * The RpcPgpArmorHeadersApi service constructor.
     * @property {module:api/RpcPgpArmorHeadersApi}
     */
    RpcPgpArmorHeadersApi: RpcPgpArmorHeadersApi,
    /**
     * The RpcPgpKeyIdApi service constructor.
     * @property {module:api/RpcPgpKeyIdApi}
     */
    RpcPgpKeyIdApi: RpcPgpKeyIdApi,
    /**
     * The RpcPgpPubDecryptApi service constructor.
     * @property {module:api/RpcPgpPubDecryptApi}
     */
    RpcPgpPubDecryptApi: RpcPgpPubDecryptApi,
    /**
     * The RpcPgpPubDecryptByteaApi service constructor.
     * @property {module:api/RpcPgpPubDecryptByteaApi}
     */
    RpcPgpPubDecryptByteaApi: RpcPgpPubDecryptByteaApi,
    /**
     * The RpcPgpPubEncryptApi service constructor.
     * @property {module:api/RpcPgpPubEncryptApi}
     */
    RpcPgpPubEncryptApi: RpcPgpPubEncryptApi,
    /**
     * The RpcPgpPubEncryptByteaApi service constructor.
     * @property {module:api/RpcPgpPubEncryptByteaApi}
     */
    RpcPgpPubEncryptByteaApi: RpcPgpPubEncryptByteaApi,
    /**
     * The RpcPgpSymDecryptApi service constructor.
     * @property {module:api/RpcPgpSymDecryptApi}
     */
    RpcPgpSymDecryptApi: RpcPgpSymDecryptApi,
    /**
     * The RpcPgpSymDecryptByteaApi service constructor.
     * @property {module:api/RpcPgpSymDecryptByteaApi}
     */
    RpcPgpSymDecryptByteaApi: RpcPgpSymDecryptByteaApi,
    /**
     * The RpcPgpSymEncryptApi service constructor.
     * @property {module:api/RpcPgpSymEncryptApi}
     */
    RpcPgpSymEncryptApi: RpcPgpSymEncryptApi,
    /**
     * The RpcPgpSymEncryptByteaApi service constructor.
     * @property {module:api/RpcPgpSymEncryptByteaApi}
     */
    RpcPgpSymEncryptByteaApi: RpcPgpSymEncryptByteaApi,
    /**
     * The RpcRequestPasswordResetApi service constructor.
     * @property {module:api/RpcRequestPasswordResetApi}
     */
    RpcRequestPasswordResetApi: RpcRequestPasswordResetApi,
    /**
     * The RpcResetPasswordApi service constructor.
     * @property {module:api/RpcResetPasswordApi}
     */
    RpcResetPasswordApi: RpcResetPasswordApi,
    /**
     * The RpcSignupApi service constructor.
     * @property {module:api/RpcSignupApi}
     */
    RpcSignupApi: RpcSignupApi,
    /**
     * The RpcUpdateUsersApi service constructor.
     * @property {module:api/RpcUpdateUsersApi}
     */
    RpcUpdateUsersApi: RpcUpdateUsersApi
  };

  return exports;
}));
