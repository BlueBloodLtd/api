/**
 * PostgREST API
 * standard public schema
 *
 * OpenAPI spec version: 0.5.0.0 (d8896be)
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Addrs', 'model/Blocks', 'model/Contracts', 'api/AddrsApi', 'api/BlocksApi', 'api/ContractsApi', 'api/IntrospectionApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Addrs'), require('./model/Blocks'), require('./model/Contracts'), require('./api/AddrsApi'), require('./api/BlocksApi'), require('./api/ContractsApi'), require('./api/IntrospectionApi'));
  }
}(function(ApiClient, Addrs, Blocks, Contracts, AddrsApi, BlocksApi, ContractsApi, IntrospectionApi) {
  'use strict';

  /**
   * standard_public_schema.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var PostgRestApi = require('index'); // See note below*.
   * var xxxSvc = new PostgRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new PostgRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new PostgRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new PostgRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.5.0.0 (d8896be)
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Addrs model constructor.
     * @property {module:model/Addrs}
     */
    Addrs: Addrs,
    /**
     * The Blocks model constructor.
     * @property {module:model/Blocks}
     */
    Blocks: Blocks,
    /**
     * The Contracts model constructor.
     * @property {module:model/Contracts}
     */
    Contracts: Contracts,
    /**
     * The AddrsApi service constructor.
     * @property {module:api/AddrsApi}
     */
    AddrsApi: AddrsApi,
    /**
     * The BlocksApi service constructor.
     * @property {module:api/BlocksApi}
     */
    BlocksApi: BlocksApi,
    /**
     * The ContractsApi service constructor.
     * @property {module:api/ContractsApi}
     */
    ContractsApi: ContractsApi,
    /**
     * The IntrospectionApi service constructor.
     * @property {module:api/IntrospectionApi}
     */
    IntrospectionApi: IntrospectionApi
  };

  return exports;
}));
