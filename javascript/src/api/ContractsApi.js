/**
 * PostgREST API
 * standard public schema
 *
 * OpenAPI spec version: 0.5.0.0 (d8896be)
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Contracts'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Contracts'));
  } else {
    // Browser globals (root is window)
    if (!root.PostgRestApi) {
      root.PostgRestApi = {};
    }
    root.PostgRestApi.ContractsApi = factory(root.PostgRestApi.ApiClient, root.PostgRestApi.Contracts);
  }
}(this, function(ApiClient, Contracts) {
  'use strict';

  /**
   * Contracts service.
   * @module api/ContractsApi
   * @version 0.5.0.0 (d8896be)
   */

  /**
   * Constructs a new ContractsApi. 
   * @alias module:api/ContractsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the contractsDelete operation.
     * @callback module:api/ContractsApi~contractsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.addr 
     * @param {String} opts.bytecode 
     * @param {String} opts.balance 
     * @param {module:model/String} opts.prefer Preference
     * @param {module:api/ContractsApi~contractsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.contractsDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'addr': opts['addr'],
        'bytecode': opts['bytecode'],
        'balance': opts['balance'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Prefer': opts['prefer']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/vnd.pgrst.object+json', 'text/csv'];
      var accepts = ['application/json', 'application/vnd.pgrst.object+json', 'text/csv'];
      var returnType = null;

      return this.apiClient.callApi(
        '/contracts', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the contractsGet operation.
     * @callback module:api/ContractsApi~contractsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Contracts} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.addr 
     * @param {String} opts.bytecode 
     * @param {String} opts.balance 
     * @param {String} opts.select Filtering Columns
     * @param {String} opts.order Ordering
     * @param {String} opts.range Limiting and Pagination
     * @param {String} opts.rangeUnit Limiting and Pagination (default to items)
     * @param {String} opts.offset Limiting and Pagination
     * @param {String} opts.limit Limiting and Pagination
     * @param {module:model/String} opts.prefer Preference
     * @param {module:api/ContractsApi~contractsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Contracts}
     */
    this.contractsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'addr': opts['addr'],
        'bytecode': opts['bytecode'],
        'balance': opts['balance'],
        'select': opts['select'],
        'order': opts['order'],
        'offset': opts['offset'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Range': opts['range'],
        'Range-Unit': opts['rangeUnit'],
        'Prefer': opts['prefer']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/vnd.pgrst.object+json', 'text/csv'];
      var accepts = ['application/json', 'application/vnd.pgrst.object+json', 'text/csv'];
      var returnType = Contracts;

      return this.apiClient.callApi(
        '/contracts', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the contractsPatch operation.
     * @callback module:api/ContractsApi~contractsPatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.addr 
     * @param {String} opts.bytecode 
     * @param {String} opts.balance 
     * @param {module:model/Contracts} opts.contracts contracts
     * @param {module:model/String} opts.prefer Preference
     * @param {module:api/ContractsApi~contractsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.contractsPatch = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['contracts'];


      var pathParams = {
      };
      var queryParams = {
        'addr': opts['addr'],
        'bytecode': opts['bytecode'],
        'balance': opts['balance'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Prefer': opts['prefer']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/vnd.pgrst.object+json', 'text/csv'];
      var accepts = ['application/json', 'application/vnd.pgrst.object+json', 'text/csv'];
      var returnType = null;

      return this.apiClient.callApi(
        '/contracts', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the contractsPost operation.
     * @callback module:api/ContractsApi~contractsPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/Contracts} opts.contracts contracts
     * @param {module:model/String} opts.prefer Preference
     * @param {module:api/ContractsApi~contractsPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.contractsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['contracts'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Prefer': opts['prefer']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/vnd.pgrst.object+json', 'text/csv'];
      var accepts = ['application/json', 'application/vnd.pgrst.object+json', 'text/csv'];
      var returnType = null;

      return this.apiClient.callApi(
        '/contracts', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
